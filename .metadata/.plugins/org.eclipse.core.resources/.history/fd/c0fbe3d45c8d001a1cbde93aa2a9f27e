package com.sfofana.app;

import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.nio.ByteBuffer;
import java.util.List;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

import com.amazonaws.auth.AWSStaticCredentialsProvider;
import com.amazonaws.auth.BasicAWSCredentials;
import com.amazonaws.services.rekognition.AmazonRekognition;
import com.amazonaws.services.rekognition.AmazonRekognitionClientBuilder;
import com.amazonaws.services.rekognition.model.BoundingBox;
import com.amazonaws.services.rekognition.model.CompareFacesMatch;
import com.amazonaws.services.rekognition.model.CompareFacesRequest;
import com.amazonaws.services.rekognition.model.CompareFacesResult;
import com.amazonaws.services.rekognition.model.ComparedFace;
import com.amazonaws.services.rekognition.model.Image;
import com.amazonaws.services.rekognition.model.S3Object;
import com.amazonaws.util.IOUtils;

@SpringBootApplication
public class ImgRecAppApplication {

	public static void main(String[] args) throws Exception{
		SpringApplication.run(ImgRecAppApplication.class, args);
	    
		Float similarityThreshold = 70F;
		String img1 = "source.jpg";
		String img2 = "target.jpg";
		String img3 = "";
		String bucket = "imgrecappsfofana";
		
		BasicAWSCredentials credentials = new BasicAWSCredentials("AKIAVYZ46OA35AMGOFVC", "DELehnn1rqqjES4SjaXXqmPWxentScX0kpNJT4d/"); 
		AmazonRekognition client = AmazonRekognitionClientBuilder
												.standard()
												.withCredentials(new AWSStaticCredentialsProvider(credentials))
												.withRegion("us-east-2").build();
		try {
			CompareFacesRequest compareFacesRequest = new CompareFacesRequest()
					.withSourceImage(
							new Image()
							.withS3Object(new S3Object()
									.withName(img1)
									.withBucket(bucket)
									)
							).withTargetImage(
							new Image()
							.withS3Object(new S3Object()
									.withName(img2)
									.withBucket(bucket)
									)
							).withSimilarityThreshold(similarityThreshold);
			CompareFacesResult results = client.compareFaces(compareFacesRequest);
			List<CompareFacesMatch> resList = results.getFaceMatches();
			
			if(!resList.isEmpty()) {
				for(CompareFacesMatch match : resList) {
					System.out.println(match.getFace() + " Similarity is: " + match.getSimilarity());
				}
			} else {
				System.out.println("Faces don't match");
			}
		} catch (Exception e) {
			System.out.println("Internal Server Error");
		}
		
//		   Float similarityThreshold = 70F;
//	       String sourceImage = "C:\\Users\\sufya\\Downloads\\source.jpg";
//	       String targetImage = "C:\\Users\\sufya\\Downloads\\target.jpg";
//	       ByteBuffer sourceImageBytes=null;
//	       ByteBuffer targetImageBytes=null;
//
//	       AmazonRekognition rekognitionClient = AmazonRekognitionClientBuilder.defaultClient();
//
//	       //Load source and target images and create input parameters
//	       try (InputStream inputStream = new FileInputStream(new File(sourceImage))) {
//	          sourceImageBytes = ByteBuffer.wrap(IOUtils.toByteArray(inputStream));
//	       }
//	       catch(Exception e)
//	       {
//	           System.out.println("Failed to load source image " + sourceImage);
//	           System.exit(1);
//	       }
//	       try (InputStream inputStream = new FileInputStream(new File(targetImage))) {
//	           targetImageBytes = ByteBuffer.wrap(IOUtils.toByteArray(inputStream));
//	       }
//	       catch(Exception e)
//	       {
//	           System.out.println("Failed to load target images: " + targetImage);
//	           System.exit(1);
//	       }
//
//	       Image source=new Image()
//	            .withBytes(sourceImageBytes);
//	       Image target=new Image()
//	            .withBytes(targetImageBytes);
//
//	       CompareFacesRequest request = new CompareFacesRequest()
//	               .withSourceImage(source)
//	               .withTargetImage(target)
//	               .withSimilarityThreshold(similarityThreshold);
//
//	       // Call operation
//	       CompareFacesResult compareFacesResult=rekognitionClient.compareFaces(request);
//
//
//	       // Display results
//	       List <CompareFacesMatch> faceDetails = compareFacesResult.getFaceMatches();
//	       for (CompareFacesMatch match: faceDetails){
//	         ComparedFace face= match.getFace();
//	         BoundingBox position = face.getBoundingBox();
//	         System.out.println("Face at " + position.getLeft().toString()
//	               + " " + position.getTop()
//	               + " matches with " + match.getSimilarity().toString()
//	               + "% confidence.");
//
//	       }
//	       List<ComparedFace> uncompared = compareFacesResult.getUnmatchedFaces();
//
//	       System.out.println("There was " + uncompared.size()
//	            + " face(s) that did not match");
	   }
}
